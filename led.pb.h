/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3-dev */

#ifndef PB_LED_PB_H_INCLUDED
#define PB_LED_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _led {
    int32_t led_green;
    int32_t led_blue;
    int32_t led_red;
    int32_t led_yellow;
} led;


/* Initializer values for message structs */
#define led_init_default                         {0, 0, 0, 0}
#define led_init_zero                            {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define led_led_green_tag                        1
#define led_led_blue_tag                         2
#define led_led_red_tag                          3
#define led_led_yellow_tag                       4

/* Struct field encoding specification for nanopb */
#define led_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    led_green,         1) \
X(a, STATIC,   REQUIRED, INT32,    led_blue,          2) \
X(a, STATIC,   REQUIRED, INT32,    led_red,           3) \
X(a, STATIC,   REQUIRED, INT32,    led_yellow,        4)
#define led_CALLBACK NULL
#define led_DEFAULT NULL

extern const pb_msgdesc_t led_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define led_fields &led_msg

/* Maximum encoded size of messages (where known) */
#define led_size                                 44

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
